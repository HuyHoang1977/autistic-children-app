# define the containers
services:
  psql-db:
    # pull the postgres image from DockerHub
    image: postgres:17
    container_name: psql-db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      FLASK_ENV: development
      FLASK_APP: manage.py
    ports:
      - "5433:5432"
    volumes:
      - db-volume:/var/lib/postgresql/data
    healthcheck:
      # used in flask container depends_on condition to wait for the DB to be ready
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 20s
      retries: 5

  minio:
    image: minio/minio:latest
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER:-minioadmin}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD:-minioadmin}
    volumes:
      - minio-data:/data
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  flask-backend:
    build: .
    env_file:
      - .env
    container_name: flask-backend
    ports:
      - "8000:5000"
    depends_on:
      psql-db:
        # waiting for the database to be ready
        condition: service_healthy
      minio:
        condition: service_healthy
    environment:
      RDS_USERNAME: ${POSTGRES_USER}
      RDS_PASSWORD: ${POSTGRES_PASSWORD}
      RDS_HOSTNAME: psql-db
      RDS_PORT: 5432
      RDS_DB_NAME: ${POSTGRES_DB}
      FLASK_ENV: development
      FLASK_APP: manage.py
      MINIO_ENDPOINT: minio:9000
      MINIO_ACCESS_KEY: ${MINIO_ROOT_USER:-minioadmin}
      MINIO_SECRET_KEY: ${MINIO_ROOT_PASSWORD:-minioadmin}
      MINIO_SECURE: false
    volumes:
      - ./app:/app/app
      - ./migrations:/app/migrations
    command: >
      sh -c "
        flask db upgrade &&
        python seed.py &&
        flask run --host=0.0.0.0
      "

volumes:
  # to persist the database tables
  db-volume:
  # to persist MinIO data
  minio-data: